name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.x
    - name: Install PyInstaller
      run: pip install pyinstaller
    - name: Build Binary
      run: pyinstaller main.py --onefile
    - name: Get previous release tag
      id: get_previous_release
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        tag-prefix: v
    - name: Get version from VERSION file
      id: get_version
      run: echo ::set-output name=version::$(cat VERSION)
    - name: Calculate new release tag
      id: calculate_release_tag
      run: echo ::set-output name=release_tag::$(python -c "version='${{ steps.get_version.outputs.version }}'.split('.'); version[2] = str(int(version[2])+1); print('.'.join(version))")
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.calculate_release_tag.outputs.release_tag }}
        release_name: Release ${{ steps.calculate_release_tag.outputs.release_tag }}
        body: 'New release'
        draft: false
        prerelease: false
    - name: Upload Binary
      id: upload-release-assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/main
        asset_name: ascii-art-generator
        asset_content_type: application/octet-stream
