name: Build and Release

on:
  push:
    branches:
      - main
 
env:
  PREVIOUS_TAG: ""

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.x
    - name: Install PyInstaller
      run: pip install pyinstaller
    - name: Build Binary
      run: pyinstaller main.py --onefile
    - name: Get Previous Tag
      id: get_prev_tag
      if: env.PREVIOUS_TAG == ""
      run: echo "::set-env name=PREVIOUS_TAG::$(git describe --abbrev=0)"
    - name: Update Tag
      id: update_tag
      if: env.PREVIOUS_TAG != ""
      run: echo "::set-env name=PREVIOUS_TAG::$(echo ${env.PREVIOUS_TAG} | awk -F'[.-]' '{$NF+=1; OFS=FS} NF{print}' | sed 's/-/./g')"
    - name: Set Release Number
      id: set_release_number
      run: echo $(( ${env.RELEASE_NUMBER} + 1 )) >> $GITHUB_ENV
      env:
        RELEASE_NUMBER: ${{ github.event.release.tag_name }}
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
      with:
        tag_name: ${{ env.PREVIOUS_TAG }}
        release_name: Release ${{ github.event.release.tag_name }}
        body: 'New release'
        draft: false
        prerelease: false
    - name: Upload Binary
      id: upload-release-assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/main
        asset_name: ascii-art-generator
        asset_content_type: application/octet-stream
